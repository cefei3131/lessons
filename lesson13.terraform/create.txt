D:\terraform\lesson13>terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_security_group.data_skruhlik-sg-terraform-ssh22 will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_security_group" "data_skruhlik-sg-terraform-ssh22" {
      + arn         = (known after apply)
      + description = (known after apply)
      + id          = (known after apply)
      + name        = "skruhlik-sg-terraform-ssh22"
      + tags        = (known after apply)
      + vpc_id      = (known after apply)
    }

  # aws_instance.skruhlik-terraform-ec2 will be created
  + resource "aws_instance" "skruhlik-terraform-ec2" {
      + ami                                  = "ami-044a3516c1b05985f"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "devops"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "skruhlik-terraform-ec2"
        }
      + tags_all                             = {
          + "Name" = "skruhlik-terraform-ec2"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_security_group.skruhlik-sg-terraform-ssh22 will be created
  + resource "aws_security_group" "skruhlik-sg-terraform-ssh22" {
      + arn                    = (known after apply)
      + description            = "skruhlik-sg-terraform-ssh22"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "185.183.33.218/32",
                  + "86.57.156.230/32",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = "skruhlik-sg-terraform-ssh22"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.skruhlik-terraform-private-subnet will be created
  + resource "aws_subnet" "skruhlik-terraform-private-subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1d"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.20.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "skruhlik-terraform-private-subnet"
        }
      + tags_all                                       = {
          + "Name" = "skruhlik-terraform-private-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.skruhlik-terraform-public-subnet will be created
  + resource "aws_subnet" "skruhlik-terraform-public-subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1d"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.10.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "skruhlik-terraform-public-subnet"
        }
      + tags_all                                       = {
          + "Name" = "skruhlik-terraform-public-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.skruhlik-terraform-vpc will be created
  + resource "aws_vpc" "skruhlik-terraform-vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + terraform_instance_id = (known after apply)
  + terraform_sg_id       = (known after apply)
  + terraform_sg_vpc_id   = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_vpc.skruhlik-terraform-vpc: Creating...
aws_vpc.skruhlik-terraform-vpc: Creation complete after 5s [id=vpc-09a280effd1193474]
aws_subnet.skruhlik-terraform-public-subnet: Creating...
aws_subnet.skruhlik-terraform-private-subnet: Creating...
aws_security_group.skruhlik-sg-terraform-ssh22: Creating...
aws_subnet.skruhlik-terraform-public-subnet: Creation complete after 2s [id=subnet-0d7340860a0aa4c7d]
aws_subnet.skruhlik-terraform-private-subnet: Creation complete after 2s [id=subnet-0e5944a5bfbbdffad]
aws_security_group.skruhlik-sg-terraform-ssh22: Creation complete after 5s [id=sg-084006cb4824c02ee]
data.aws_security_group.data_skruhlik-sg-terraform-ssh22: Reading...
aws_instance.skruhlik-terraform-ec2: Creating...
data.aws_security_group.data_skruhlik-sg-terraform-ssh22: Read complete after 0s [id=sg-084006cb4824c02ee]
aws_instance.skruhlik-terraform-ec2: Still creating... [10s elapsed]
aws_instance.skruhlik-terraform-ec2: Creation complete after 15s [id=i-07aa74effb1cb4be7]

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

terraform_instance_id = "i-07aa74effb1cb4be7"
terraform_sg_id = "sg-084006cb4824c02ee"
terraform_sg_vpc_id = "vpc-09a280effd1193474"